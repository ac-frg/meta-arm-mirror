From 957e0145899813017a6a2b7f863a4a2b4e4b75aa Mon Sep 17 00:00:00 2001
From: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Date: Tue, 5 Jan 2021 09:27:41 +0000
Subject: [PATCH] tee: optee: fix mem handle removal in ffa_shm_unregister

Remove ffa memory handle before calling mem_reclaim. This enables the
handle to be re-used by another thread once mem_claim for that handle
is completed.

Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Change-Id: I7294bd71f2bbc28514eaa09ae757dd216bc7df45

Upstream-Status: Pending [Not submitted to upstream yet]
---
 drivers/tee/optee/call.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/tee/optee/call.c b/drivers/tee/optee/call.c
index ac89ab42a43f..9c9480add0b5 100644
--- a/drivers/tee/optee/call.c
+++ b/drivers/tee/optee/call.c
@@ -843,6 +843,10 @@ int optee_ffa_shm_unregister_supp(struct tee_context *ctx,
 {
 	struct optee *optee = tee_get_drvdata(ctx->teedev);
 	int rc = 0;
+	u64 handle = shm->sec_world_id;
+
+	optee_shm_rem_ffa_handle(optee, handle);
+	shm->sec_world_id = 0;
 
 	/*
 	 * We're skipping the OPTEE_FFA_YIELDING_CALL_UNREGISTER_SHM call
@@ -850,14 +854,10 @@ int optee_ffa_shm_unregister_supp(struct tee_context *ctx,
 	 * this ID.
 	 */
 
-	rc = optee->ffa.ops->mem_reclaim(shm->sec_world_id, 0);
+	rc = optee->ffa.ops->mem_reclaim(handle, 0);
 	if (rc)
 		pr_err("mem_reclain: %d", rc);
 
-	optee_shm_rem_ffa_handle(optee, shm->sec_world_id);
-
-	shm->sec_world_id = 0;
-
 	return rc;
 }
 #endif /*CONFIG_ARM_FFA_TRANSPORT*/
-- 
2.26.2

