From f080a6ae839b48188131648363c9e050f496f205 Mon Sep 17 00:00:00 2001
From: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Date: Mon, 12 Apr 2021 10:22:26 +0100
Subject: [PATCH 3/3] FF-A: Fix to fetch proper vCPU index for UP SP

When switching the context between SPs, fetch the vCPU index using
api_vm_get_vcpu() helper routine. This routine gets the vCPU at index 0
for UP SP.

Rename function api_ffa_msg_send_direct_get_receiver_vcpu() to
api_vm_get_vcpu() as it is used both in direct message request
and response.

Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Change-Id: I45a60427f8c2d1b5058443536d972495728ee0c2
Upstream-Status: Pending [Not submitted to upstream yet]
---
 src/api.c | 44 +++++++++++++++++++++-----------------------
 1 file changed, 21 insertions(+), 23 deletions(-)

diff --git a/src/api.c b/src/api.c
index 16626b6..4c8034e 100644
--- a/src/api.c
+++ b/src/api.c
@@ -63,6 +63,25 @@ void api_init(struct mpool *ppool)
 	mpool_init_from(&api_page_pool, ppool);
 }
 
+/**
+ * Get target VM vCPU.
+ * If VM is UP then return first vCPU.
+ * If VM is MP then return vCPU whose index matches current CPU index.
+ */
+static struct vcpu *api_vm_get_vcpu(struct vm *vm, struct vcpu *current)
+{
+	ffa_vcpu_index_t current_cpu_index = cpu_index(current->cpu);
+	struct vcpu *vcpu = NULL;
+
+	if (vm->vcpu_count == 1) {
+		vcpu = vm_get_vcpu(vm, 0);
+	} else if (current_cpu_index < vm->vcpu_count) {
+		vcpu = vm_get_vcpu(vm, current_cpu_index);
+	}
+
+	return vcpu;
+}
+
 /**
  * Switches the physical CPU back to the corresponding vCPU of the VM whose ID
  * is given as argument of the function.
@@ -80,7 +99,7 @@ static struct vcpu *api_switch_to_vm(struct vcpu *current,
 				     ffa_vm_id_t to_id)
 {
 	struct vm *to_vm = vm_find(to_id);
-	struct vcpu *next = vm_get_vcpu(to_vm, cpu_index(current->cpu));
+	struct vcpu *next = api_vm_get_vcpu(to_vm, current);
 
 	CHECK(next != NULL);
 
@@ -1630,26 +1649,6 @@ struct ffa_value api_ffa_features(uint32_t function_id)
 	}
 }
 
-/**
- * Get target VM vCPU for direct messaging request.
- * If VM is UP then return first vCPU.
- * If VM is MP then return vCPU whose index matches current CPU index.
- */
-static struct vcpu *api_ffa_msg_send_direct_get_receiver_vcpu(
-	struct vm *vm, struct vcpu *current)
-{
-	ffa_vcpu_index_t current_cpu_index = cpu_index(current->cpu);
-	struct vcpu *vcpu = NULL;
-
-	if (vm->vcpu_count == 1) {
-		vcpu = vm_get_vcpu(vm, 0);
-	} else if (current_cpu_index < vm->vcpu_count) {
-		vcpu = vm_get_vcpu(vm, current_cpu_index);
-	}
-
-	return vcpu;
-}
-
 /**
  * FF-A specification states that x2/w2 Must Be Zero for direct messaging
  * interfaces.
@@ -1733,8 +1732,7 @@ struct ffa_value api_ffa_msg_send_direct_req(ffa_vm_id_t sender_vm_id,
 	 * number of PEs in the system. It further states that MP partitions
 	 * accepting direct request messages cannot migrate.
 	 */
-	receiver_vcpu =
-		api_ffa_msg_send_direct_get_receiver_vcpu(receiver_vm, current);
+	receiver_vcpu = api_vm_get_vcpu(receiver_vm, current);
 	if (receiver_vcpu == NULL) {
 		return ffa_error(FFA_INVALID_PARAMETERS);
 	}
-- 
2.29.2

