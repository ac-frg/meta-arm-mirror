Upstream-Status: Pending [Not submitted to upstream yet]
Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>

From 0c427d7f164a46862f6267b616d4ade28865b57a Mon Sep 17 00:00:00 2001
From: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Date: Wed, 15 Jul 2020 12:51:04 +0100
Subject: [PATCH 2/5] core: arm: Total Compute platform support

Initial support for Total Compute platform[1]
    - defines tc0 platform configuration
    - enables CFG_ARM64_core by default
    - defines TZCDRAM_BASE

Link: [1] https://community.arm.com/developer/tools-software/oss-platforms/w/docs/606/total-compute

Change-Id: Icddafbdfac40bb6ff3c367910acf632688343721
Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
---
 core/arch/arm/plat-totalcompute/conf.mk       | 32 +++++++++++
 core/arch/arm/plat-totalcompute/main.c        | 55 +++++++++++++++++++
 .../arm/plat-totalcompute/platform_config.h   | 43 +++++++++++++++
 core/arch/arm/plat-totalcompute/sub.mk        |  2 +
 4 files changed, 132 insertions(+)
 create mode 100644 core/arch/arm/plat-totalcompute/conf.mk
 create mode 100644 core/arch/arm/plat-totalcompute/main.c
 create mode 100644 core/arch/arm/plat-totalcompute/platform_config.h
 create mode 100644 core/arch/arm/plat-totalcompute/sub.mk

diff --git a/core/arch/arm/plat-totalcompute/conf.mk b/core/arch/arm/plat-totalcompute/conf.mk
new file mode 100644
index 00000000..4fe894c7
--- /dev/null
+++ b/core/arch/arm/plat-totalcompute/conf.mk
@@ -0,0 +1,32 @@
+PLATFORM_FLAVOR ?= tc0
+
+ifeq ($(PLATFORM_FLAVOR),tc0)
+include core/arch/arm/cpu/cortex-armv8-0.mk
+platform-debugger-arm := 1
+endif
+
+$(call force,CFG_WITH_ARM_TRUSTED_FW,y)
+$(call force,CFG_GENERIC_BOOT,y)
+$(call force,CFG_GIC,y)
+$(call force,CFG_ARM_GICV3,y)
+$(call force,CFG_PL011,y)
+$(call force,CFG_PM_STUBS,y)
+$(call force,CFG_SECURE_TIME_SOURCE_CNTPCT,y)
+$(call force,CFG_ARM64_core,y)
+$(call force,CFG_WITH_LPAE,y)
+
+ifeq ($(platform-debugger-arm),1)
+# ARM debugger needs this
+platform-cflags-debug-info = -gdwarf-2
+platform-aflags-debug-info = -gdwarf-2
+endif
+
+ifeq ($(PLATFORM_FLAVOR),tc0)
+CFG_TEE_CORE_NB_CORE = 4
+
+CFG_TZDRAM_START ?= 0xff000000
+CFG_TZDRAM_SIZE  ?= 0x01000000
+
+CFG_SHMEM_START  ?= 0xfce00000
+CFG_SHMEM_SIZE   ?= 0x00200000
+endif
diff --git a/core/arch/arm/plat-totalcompute/main.c b/core/arch/arm/plat-totalcompute/main.c
new file mode 100644
index 00000000..e775abfc
--- /dev/null
+++ b/core/arch/arm/plat-totalcompute/main.c
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2020, Arm Limited. All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <arm.h>
+#include <console.h>
+#include <drivers/gic.h>
+#include <drivers/pl011.h>
+#include <initcall.h>
+#include <kernel/boot.h>
+#include <kernel/interrupt.h>
+#include <kernel/misc.h>
+#include <kernel/panic.h>
+
+#include <mm/core_mmu.h>
+#include <platform_config.h>
+
+static struct gic_data gic_data __nex_bss;
+static struct pl011_data console_data __nex_bss;
+
+register_phys_mem_pgdir(MEM_AREA_IO_SEC, CONSOLE_UART_BASE, PL011_REG_SIZE);
+register_phys_mem_pgdir(MEM_AREA_IO_SEC, GICD_BASE, GIC_DIST_REG_SIZE);
+
+register_ddr(DRAM0_BASE, DRAM0_SIZE);
+
+void main_init_gic(void)
+{
+	vaddr_t gicc_base;
+
+	gicc_base = (vaddr_t)phys_to_virt(GIC_BASE + GICC_OFFSET,
+					  MEM_AREA_IO_SEC);
+	if (!gicc_base)
+		panic();
+
+	/*
+	 * On ARMv8, GIC configuration is initialized in ARM-TF
+	 * gicd base address is same as gicc_base.
+	 */
+	gic_init_base_addr(&gic_data, gicc_base, gicc_base);
+	itr_init(&gic_data.chip);
+}
+
+void itr_core_handler(void)
+{
+	gic_it_handle(&gic_data);
+}
+
+void console_init(void)
+{
+	pl011_init(&console_data, CONSOLE_UART_BASE, CONSOLE_UART_CLK_IN_HZ,
+		   CONSOLE_UART_BAUDRATE);
+	register_serial_console(&console_data.chip);
+}
diff --git a/core/arch/arm/plat-totalcompute/platform_config.h b/core/arch/arm/plat-totalcompute/platform_config.h
new file mode 100644
index 00000000..dfc58857
--- /dev/null
+++ b/core/arch/arm/plat-totalcompute/platform_config.h
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2020, Arm Limited. All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef PLATFORM_CONFIG_H
+#define PLATFORM_CONFIG_H
+
+#include <mm/generic_ram_layout.h>
+
+/* Make stacks aligned to data cache line length */
+#define STACK_ALIGNMENT		64
+
+#if defined(PLATFORM_FLAVOR_tc0)
+#define GIC_BASE		0x30000000
+#define GICD_OFFSET		0x0
+#define GICC_OFFSET		0x0
+
+#define UART0_BASE		0x7FF70000
+#define UART1_BASE		0x7FF80000
+
+#define CONSOLE_UART_BASE	UART0_BASE
+
+#define DRAM0_BASE		0x80000000
+#define DRAM0_SIZE		0x7d000000
+
+#define TZCDRAM_BASE		0xff000000
+#define TZCDRAM_SIZE		0x01000000
+
+#else
+#error "Unknown platform flavor"
+#endif
+
+#ifdef GIC_BASE
+#define GICD_BASE		(GIC_BASE + GICD_OFFSET)
+#define GICC_BASE		(GIC_BASE + GICC_OFFSET)
+#endif
+
+#define CONSOLE_UART_BAUDRATE	115200
+#define CONSOLE_UART_CLK_IN_HZ	7372800
+
+#endif /* PLATFORM_CONFIG_H */
diff --git a/core/arch/arm/plat-totalcompute/sub.mk b/core/arch/arm/plat-totalcompute/sub.mk
new file mode 100644
index 00000000..8ddc2fd4
--- /dev/null
+++ b/core/arch/arm/plat-totalcompute/sub.mk
@@ -0,0 +1,2 @@
+global-incdirs-y += .
+srcs-y += main.c
-- 
2.26.2

