Upstream-Status: Pending [Not submitted to upstream yet]
Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>

From 8c21a8c7ac92839f36f83ebff9a208f24302c780 Mon Sep 17 00:00:00 2001
From: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
Date: Mon, 16 Nov 2020 17:29:09 +0000
Subject: [PATCH 3/5] plat-totalcompute: Add support for S-EL2 SPMC

This patch adds CFG_CORE_SEL2_SPMC support. Defines CFG_TZDRAM_START
address with memory region reserved for SPMC. Adds secondary cpu boot
request handler.

Change-Id: I3f274c7bb6b7df2706ea81aee0f2a8f8f39c1d80
Signed-off-by: Arunachalam Ganapathy <arunachalam.ganapathy@arm.com>
---
 core/arch/arm/plat-totalcompute/conf.mk       |  5 ++
 core/arch/arm/plat-totalcompute/sub.mk        |  3 ++
 core/arch/arm/plat-totalcompute/tc0_spmc_pm.c | 50 +++++++++++++++++++
 3 files changed, 58 insertions(+)
 create mode 100644 core/arch/arm/plat-totalcompute/tc0_spmc_pm.c

diff --git a/core/arch/arm/plat-totalcompute/conf.mk b/core/arch/arm/plat-totalcompute/conf.mk
index 4fe894c7..34095acf 100644
--- a/core/arch/arm/plat-totalcompute/conf.mk
+++ b/core/arch/arm/plat-totalcompute/conf.mk
@@ -24,8 +24,13 @@ endif
 ifeq ($(PLATFORM_FLAVOR),tc0)
 CFG_TEE_CORE_NB_CORE = 4
 
+ifeq ($(CFG_CORE_SEL2_SPMC),y)
+CFG_TZDRAM_START ?= 0xfd281000
+CFG_TZDRAM_SIZE  ?= 0x01d7f000
+else
 CFG_TZDRAM_START ?= 0xff000000
 CFG_TZDRAM_SIZE  ?= 0x01000000
+endif
 
 CFG_SHMEM_START  ?= 0xfce00000
 CFG_SHMEM_SIZE   ?= 0x00200000
diff --git a/core/arch/arm/plat-totalcompute/sub.mk b/core/arch/arm/plat-totalcompute/sub.mk
index 8ddc2fd4..ffd76ee9 100644
--- a/core/arch/arm/plat-totalcompute/sub.mk
+++ b/core/arch/arm/plat-totalcompute/sub.mk
@@ -1,2 +1,5 @@
 global-incdirs-y += .
 srcs-y += main.c
+ifeq ($(CFG_CORE_FFA),y)
+srcs-y += tc0_spmc_pm.c
+endif
diff --git a/core/arch/arm/plat-totalcompute/tc0_spmc_pm.c b/core/arch/arm/plat-totalcompute/tc0_spmc_pm.c
new file mode 100644
index 00000000..8e59a8cc
--- /dev/null
+++ b/core/arch/arm/plat-totalcompute/tc0_spmc_pm.c
@@ -0,0 +1,50 @@
+// SPDX-License-Identifier: BSD-2-Clause
+/*
+ * Copyright (c) 2020, Arm Limited
+ */
+
+#include <arm.h>
+#include <kernel/boot.h>
+#include <ffa.h>
+#include <sm/psci.h>
+
+/*
+ * Lookup table of core and cluster affinities on the TC0. In the absence of a
+ * DT that provides the same information, this table is used to initialise
+ * OP-TEE on secondary cores.
+ */
+static const uint64_t core_clus_aff_array[] = {
+	0x0000,		/* Cluster 0 Cpu 0 */
+	0x0001,		/* Cluster 0 Cpu 1 */
+	0x0002,		/* Cluster 0 Cpu 2 */
+	0x0003		/* Cluster 0 Cpu 3 */
+};
+
+void ffa_secondary_cpu_boot_req(vaddr_t secondary_ep, uint64_t cookie)
+{
+	unsigned long mpidr = read_mpidr();
+	unsigned int aff_shift = 0;
+	unsigned long a1 = 0;
+	unsigned int cnt = 0;
+	int32_t ret = 0;
+
+	if (mpidr & MPIDR_MT_MASK)
+		aff_shift = MPIDR_CLUSTER_SHIFT;
+
+	for (cnt = 0; cnt < ARRAY_SIZE(core_clus_aff_array); cnt++) {
+		/* Clear out the affinity fields until level 2 */
+		a1 = mpidr & ~(unsigned long)MPIDR_AARCH32_AFF_MASK;
+
+		/* Create an mpidr from core_clus_aff_array */
+		a1 |= core_clus_aff_array[cnt] << aff_shift;
+
+		/* Invoke the PSCI_CPU_ON_SMC64 function */
+		ret = thread_smc(PSCI_CPU_ON_SMC64, a1, secondary_ep, cookie);
+
+		if (ret != PSCI_RET_SUCCESS)
+			EMSG("PSCI_CPU_ON op on mpidr 0x%lx failed %"PRId32,
+			     a1, ret);
+		else
+			DMSG("PSCI_CPU_ON op on mpidr 0x%lx done", a1);
+	}
+}
-- 
2.26.2

